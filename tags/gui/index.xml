<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GUI on philipjkim</title>
    <link>https://philipjkim.github.io/tags/gui/</link>
    <description>Recent content in GUI on philipjkim</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 22 Jul 2025 10:49:31 +0900</lastBuildDate>
    <atom:link href="https://philipjkim.github.io/tags/gui/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TotT: GUI 테스팅의 MVP 되기</title>
      <link>https://philipjkim.github.io/posts/20250722-tott-be-an-mvp-of-gui-testing/</link>
      <pubDate>Tue, 22 Jul 2025 10:49:31 +0900</pubDate>
      <guid>https://philipjkim.github.io/posts/20250722-tott-be-an-mvp-of-gui-testing/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://testing.googleblog.com/2009/02/with-all-sport-drug-scandals-of-late.html&#34;&gt;https://testing.googleblog.com/2009/02/with-all-sport-drug-scandals-of-late.html&lt;/a&gt; (Translated by Google Gemini)&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;최근의 모든 스포츠 약물 스캔들로 인해 요즘 좋은 롤 모델을 찾기가 어렵습니다. 하지만 롤 모델이 도메인 모델(비즈니스 엔티티의 객체 모델)이라면 MVP가 되기 위해 속임수를 쓸 필요가 없습니다. Model-View-Presenter를 사용하세요!&lt;/p&gt;&#xA;&lt;p&gt;MVP는 MVC(Model-View-Controller)와 매우 유사합니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;MVC에서는 아래 다이어그램과 같이 프레젠테이션 로직이 Controller와 View에 의해 공유됩니다.&lt;/strong&gt; View는 일반적으로 가시적인 GUI 프레임워크 구성 요소에서 직접 파생되며, 모델을 관찰하고 사용자에게 시각적으로 보여줍니다. Controller는 사용자 이벤트를 모델 변경으로 변환하는 방법을 결정하는 역할을 합니다. &lt;strong&gt;MVP에서는 프레젠테이션 로직이 Presenter라고도 알려진 Supervising Controller에 의해 전적으로 처리됩니다.&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
