<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LLM on philipjkim</title>
    <link>https://philipjkim.github.io/tags/llm/</link>
    <description>Recent content in LLM on philipjkim</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 09 Sep 2025 09:03:43 +0900</lastBuildDate>
    <atom:link href="https://philipjkim.github.io/tags/llm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>번역글: 언어 모델이 &#39;환각&#39;을 일으키는 이유와 그 해결 방안</title>
      <link>https://philipjkim.github.io/posts/20250909-why-language-models-hallucinate/</link>
      <pubDate>Tue, 09 Sep 2025 09:03:43 +0900</pubDate>
      <guid>https://philipjkim.github.io/posts/20250909-why-language-models-hallucinate/</guid>
      <description>&lt;p&gt;&lt;em&gt;원문: &lt;a href=&#34;https://openai.com/index/why-language-models-hallucinate/&#34;&gt;https://openai.com/index/why-language-models-hallucinate/&lt;/a&gt; (translated by Gemini)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;대규모 언어 모델(LLM)은 방대한 양의 텍스트 데이터로 학습하여 다음에 올 단어를 예측하도록 훈련됩니다. 하지만 이 과정은 모델이 사실과 다른 내용을 그럴듯하게 만들어내는, 이른바 &lt;strong&gt;&amp;lsquo;환각(hallucination)&amp;rsquo;&lt;/strong&gt; 현상을 일으키기도 합니다.&lt;/p&gt;&#xA;&lt;p&gt;이 글에서는 환각이 왜 발생하는지 기술적으로 설명하고, 이 문제를 해결하기 위한 저희의 접근 방식을 공유하고자 합니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;환각은-왜-일어나는가&#34;&gt;환각은 왜 일어나는가?&lt;/h2&gt;&#xA;&lt;p&gt;환각은 모델의 근본적인 작동 방식에서 비롯됩니다. 모델은 &amp;lsquo;진실&amp;rsquo;을 이해하는 것이 아니라, 훈련 데이터에 나타난 &lt;strong&gt;통계적 패턴&lt;/strong&gt;을 학습할 뿐입니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;1. 훈련 데이터의 한계&lt;/strong&gt;&#xA;모델은 인터넷, 책 등에서 수집한 방대한 텍스트로 학습합니다. 이 데이터에는 잘못된 정보, 편견, 모순된 내용이 포함되어 있을 수밖에 없습니다. 모델은 이 모든 것을 사실 여부와 관계없이 패턴으로 학습하기 때문에, 부정확한 정보를 사실인 것처럼 생성할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>번역글: LLM과 소프트웨어 개발에 대한 몇 가지 생각</title>
      <link>https://philipjkim.github.io/posts/20250908-some-thoughts-on-llms-and-software-development/</link>
      <pubDate>Mon, 08 Sep 2025 14:10:40 +0900</pubDate>
      <guid>https://philipjkim.github.io/posts/20250908-some-thoughts-on-llms-and-software-development/</guid>
      <description>&lt;p&gt;&lt;em&gt;원문: &lt;a href=&#34;https://martinfowler.com/articles/202508-ai-thoughts.html&#34;&gt;https://martinfowler.com/articles/202508-ai-thoughts.html&lt;/a&gt; (translated by Gemini)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;저는 몇 주간 이 사이트 관리를 잠시 떠나려 합니다 (일부 휴가, 일부 업무). 일상적인 루틴에서 벗어나 몇 주를 보낼 생각을 하니, LLM과 AI의 현재 상태에 대한 산발적인 생각들을 나누고 싶은 충동을 느낍니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;AI가 소프트웨어 개발에 어떤 영향을 미치는지에 대한 초기 설문조사들을 몇 가지 봤습니다. 과연 개발 속도를 높여주고 있는지, 코드 품질을 향상시키는지 아니면 망치고 있는지에 대한 내용들이죠. 이런 설문조사들의 큰 문제점 중 하나는 사람들이 LLM을 &lt;strong&gt;어떻게&lt;/strong&gt; 사용하고 있는지 고려하지 않는다는 점입니다. 제가 아는 바로는 LLM 사용의 대다수가 코파일럿(Co-pilot)을 이용하는 것과 같은 단순한 자동 완성에 그치고 있습니다. 하지만 LLM으로부터 가장 큰 가치를 얻는다고 말하는 사람들은 자동 완성이 그다지 유용하지 않다고 생각하며, LLM이 소스 코드 파일을 직접 읽고 편집하여 작업을 수행하는 방식을 선호합니다. LLM을 사용하는 다양한 워크플로우를 무시하는 설문조사는 사람들을 잘못된 길로 이끌 수 있는 데이터를 만들어낼까 봐 걱정됩니다.&#xA;(또 다른 복잡한 문제는 모델마다 기능이 다르다는 점입니다.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>책 소개: 마침내 특이점이 시작된다: 레이 커즈와일의 예언, 20년 후의 현실</title>
      <link>https://philipjkim.github.io/posts/20250812-book-the-singularity-is-nearer/</link>
      <pubDate>Tue, 12 Aug 2025 08:21:10 +0900</pubDate>
      <guid>https://philipjkim.github.io/posts/20250812-book-the-singularity-is-nearer/</guid>
      <description>&lt;p&gt;&lt;em&gt;이 글은 &amp;ldquo;마침내 특이점이 시작된다&amp;rdquo; 책에 관련한 여러 가지 질문들에 대한 Gemini 2.5 pro 의 대답에 기반했으며 일부 내용은 수정되었습니다.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;레이 커즈와일(Ray Kurzweil)은 단순한 발명가나 컴퓨터 과학자를 넘어, 기술의 기하급수적 발전을 통해 인류 문명의 근본적 변화를 예고한 &amp;lsquo;현대의 노스트라다무스&amp;rsquo;로 불립니다. 2005년, 그는 저서 &amp;lt;특이점이 온다 (The Singularity Is Near)&amp;gt;를 통해 인공지능이 인간의 지능을 초월하는 &amp;lsquo;특이점&amp;rsquo;이 임박했음을 선언했습니다. 그리고 약 20년이 지난 지금, 그의 새로운 책 &amp;lt;마침내 특이점이 시작된다 (The Singularity Is Nearer)&amp;gt;는 그 예언이 현실로 다가오고 있음을 구체적인 증거와 함께 제시합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>용어 소개: AGI 란 무엇인가?</title>
      <link>https://philipjkim.github.io/posts/20250808-what-is-agi/</link>
      <pubDate>Fri, 08 Aug 2025 11:59:44 +0900</pubDate>
      <guid>https://philipjkim.github.io/posts/20250808-what-is-agi/</guid>
      <description>&lt;p&gt;&lt;em&gt;이 글은 AGI 에 대한 정의와 개념, 현재 LLM 에서 사용되는 AI 와의 차이점 질문에 대한 Gemini 2.5 pro 의 대답입니다.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;AGI(범용 인공지능)는 인간이 할 수 있는 모든 지적인 작업을 기계가 해낼 수 있는, 특정 작업에 국한되지 않은 포괄적인 인공지능을 의미합니다. 이는 주어진 데이터로 학습된 패턴에 따라 반응하는 현재의 AI를 넘어, 스스로 추론하고, 배우고, 새로운 상황에 적응하는 능력을 갖춘 지능을 말합니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;agi범용-인공지능란-무엇인가요-&#34;&gt;AGI(범용 인공지능)란 무엇인가요? 🧠&lt;/h2&gt;&#xA;&lt;p&gt;AGI(Artificial General Intelligence)는 종종 &amp;lsquo;강한 AI(Strong AI)&amp;lsquo;라고도 불립니다. 현재 우리가 사용하는 대부분의 AI는 &amp;lsquo;약한 AI(Weak AI)&amp;rsquo; 또는 &amp;lsquo;좁은 AI(Narrow AI)&amp;lsquo;로 분류되는데, 이는 언어 번역, 이미지 인식, 코드 생성 등 특정 작업에만 뛰어나도록 설계되었기 때문입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>책 소개: VIBE CODING by Gene Kim and Steve Yegge</title>
      <link>https://philipjkim.github.io/posts/20250807-book-vibe-coding-preface/</link>
      <pubDate>Thu, 07 Aug 2025 07:44:08 +0900</pubDate>
      <guid>https://philipjkim.github.io/posts/20250807-book-vibe-coding-preface/</guid>
      <description>&lt;p&gt;&lt;em&gt;이 책의 존재를 알려준 &lt;a href=&#34;mailto:r@rsl.kr&#34;&gt;r@rsl.kr&lt;/a&gt; 에게 감사를 표합니다.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;이 책의 공개된 일부 내용은 &lt;a href=&#34;https://go.itrevolution.net/e/Xys/U3oak/7Qm/R2mkNon98&#34;&gt;https://go.itrevolution.net/e/Xys/U3oak/7Qm/R2mkNon98&lt;/a&gt; 에서 다운로드할 수 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;이 글은 제가 pdf 원문을 읽기 전 맥락을 먼저 갖기 위해 Gemini 에 번역/요약을 요청한 결과입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;책-소개-vibe-coding---무엇을-다루는가&#34;&gt;책 소개: &amp;ldquo;VIBE CODING&amp;rdquo; - 무엇을 다루는가?&lt;/h2&gt;&#xA;&lt;p&gt;이 책은 &lt;strong&gt;&amp;ldquo;바이브 코딩(Vibe Coding)&amp;rdquo;&lt;/strong&gt; 이라는 새로운 소프트웨어 개발 패러다임을 중심으로, 생성형 AI(GenAI), 챗(Chat), 에이전트(Agent)를 활용하여 실제 상용 수준의 소프트웨어를 구축하는 방법을 다룹니다. 저자들은 바이브 코딩이 단순히 코드를 빨리 짜는 기술을 넘어, 소프트웨어를 &lt;strong&gt;누가, 어떤 속도로, 얼마나 큰 야망을 가지고 만들 수 있는지&lt;/strong&gt;에 대한 근본적인 정의를 바꾸고 있다고 주장합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>번역글: 형편없는 바이브 코더의 9가지 습관</title>
      <link>https://philipjkim.github.io/posts/20250806-9-habits-of-the-highly-ineffective-vibe-coder/</link>
      <pubDate>Wed, 06 Aug 2025 15:28:31 +0900</pubDate>
      <guid>https://philipjkim.github.io/posts/20250806-9-habits-of-the-highly-ineffective-vibe-coder/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.infoworld.com/article/4029093/9-habits-of-the-highly-ineffective-vibe-coder.html&#34;&gt;https://www.infoworld.com/article/4029093/9-habits-of-the-highly-ineffective-vibe-coder.html&lt;/a&gt; (Translated by Google Gemini)&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;바이브 코딩이 정말 그렇게 쉽다고요? AI의 현실 세계적 등가물인 집사를 생각해 보세요. 새로운 집사에게 아침 식사를 제공하거나 완벽한 마티니를 만드는 방법과 같은 기술을 가르치는 전문 학교가 있습니다. 하지만 이 학교들이 부자들에게 집사와 잘 지내는 방법을 가르치는 병행 과정도 있다는 것을 알고 계셨나요? 맞습니다. 부자들은 찻잔을 올바르게 잡는 방법을 배워서 집사가 우아하게 차를 채울 수 있도록 합니다. 심지어 어떤 종류의 요청이 적절하고 어떤 것이 그렇지 않은지도 배웁니다. 이것은 2분짜리 틱톡 비디오에서는 가르칠 수 없는 종류의 일입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>번역글: 증강 코딩: 바이브를 넘어</title>
      <link>https://philipjkim.github.io/posts/20250806-augmented-coding-beyond-the-vibes/</link>
      <pubDate>Wed, 06 Aug 2025 09:22:00 +0900</pubDate>
      <guid>https://philipjkim.github.io/posts/20250806-augmented-coding-beyond-the-vibes/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://tidyfirst.substack.com/p/augmented-coding-beyond-the-vibes&#34;&gt;https://tidyfirst.substack.com/p/augmented-coding-beyond-the-vibes&lt;/a&gt; (Translated by Google Gemini)&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;이 글의 존재를 알려준 &lt;a href=&#34;mailto:r@rsl.kr&#34;&gt;r@rsl.kr&lt;/a&gt; 에게 감사를 표합니다.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;최근 증강 코딩을 사용하여 B+ 트리 라이브러리를 구축하려는 야심 찬 프로젝트에서 좋은 마무리를 지었습니다. 그 결과물은 &lt;a href=&#34;https://github.com/KentBeck/BPlusTree3&#34;&gt;&lt;em&gt;BPlusTree3&lt;/em&gt;&lt;/a&gt; - Rust 및 Python으로 구현된 성능 경쟁력이 있고, 어쩌면 프로덕션에 즉시 사용 가능한 구현입니다. 저는 친구와 앉아 저의 이야기를 나누고 GenAI 시대의 프로그래밍 미래에 대해 무엇을 시사하는지 생각해 보았습니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;무엇이-당신을-b-트리를-먼저-구현하게-만들었나요&#34;&gt;무엇이 당신을 B+ 트리를 먼저 구현하게 만들었나요?&lt;/h2&gt;&#xA;&lt;p&gt;증강 코딩의 놀라운 힘을 깨닫기 시작했을 때, 저는 과거에 기술적으로 접근하기 어려웠던 프로젝트들을 떠올리기 시작했습니다. 그중 하나는 특수 목적 데이터베이스였습니다. 지금 그 데이터베이스 프로젝트를 구현하면서 B+ 트리 데이터 구조를 충분히 이해하지 못했다는 것을 깨달았고 그래서 목표를 바꿨습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>AI 코딩 시대의 그림자: LLM 의존이 개발자에게 미치는 잠재적 위험 5가지</title>
      <link>https://philipjkim.github.io/posts/20250805-shadows-of-ai-coding-era/</link>
      <pubDate>Tue, 05 Aug 2025 16:12:15 +0900</pubDate>
      <guid>https://philipjkim.github.io/posts/20250805-shadows-of-ai-coding-era/</guid>
      <description>&lt;p&gt;&lt;code&gt;vibe-coding&lt;/code&gt;, &lt;code&gt;agent-coding&lt;/code&gt; 이라는 말이 어색하지 않은 시대입니다. Claude, Gemini, GitHub Copilot과 같은 LLM(거대 언어 모델) 기반 코딩 도구들은 이제 단순히 코드 스니펫을 자동 완성해주는 수준을 넘어, 우리의 생각을 논리적으로 설명하면 프로젝트 전체의 구조를 짜고 방대한 양의 코드를 순식간에 만들어냅니다. 생산성의 혁신이라 부를 만한 이 변화는 분명 경이롭습니다.&lt;/p&gt;&#xA;&lt;p&gt;하지만 이 강력한 도구에 과도하게 의존하기 시작하면서, 우리는 이전에 겪어보지 못한 새로운 종류의 문제들에 직면하고 있습니다. 밝은 빛이 강할수록 그림자도 짙어지는 법입니다. 지난 주말 바이브코딩을 직접 경험해 보며 그런 그림자의 영역을 빠르게 체감할 수 있었습니다. 이 글에서는 LLM 기반 코딩에 대한 의존이 개발자 개인과 팀에 미칠 수 있는 5가지 잠재적 위험을 심도 있게 다뤄보고자 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>기업 소개: Thinking Machines Lab</title>
      <link>https://philipjkim.github.io/posts/20250805-introduction-to-thinking-machines-lab/</link>
      <pubDate>Tue, 05 Aug 2025 14:22:34 +0900</pubDate>
      <guid>https://philipjkim.github.io/posts/20250805-introduction-to-thinking-machines-lab/</guid>
      <description>&lt;h2 id=&#34;창립-배경&#34;&gt;창립 배경&lt;/h2&gt;&#xA;&lt;p&gt;2025년 2월, &lt;a href=&#34;https://thinkingmachines.ai/&#34;&gt;Thinking Machines Lab&lt;/a&gt; 는 인공지능 업계의 &amp;lsquo;드림팀&amp;rsquo;으로 불리는 전 OpenAI 핵심 인력들이 주축이 되어 설립되었습니다. CEO인 미라 무라티(Mira Murati)를 비롯해 존 슐먼(John Schulman), 바렛 조프(Barret Zoph), 릴리안 웽(Lilian Weng), 앤드류 툴로치(Andrew Tulloch) 등 OpenAI에서 ChatGPT와 GPT-4 개발을 이끌었던 최고 전문가들이 대거 합류하며 큰 주목을 받았습니다.&lt;/p&gt;&#xA;&lt;p&gt;이들은 기존 AI 기술의 한계를 넘어 인간과 더 안전하고 효과적으로 협력할 수 있는 차세대 인공지능을 구축하겠다는 공동의 목표를 가지고 OpenAI를 떠나 새로운 회사를 설립했습니다. 이는 단순히 더 강력한 AI 모델을 만드는 것을 넘어, 인공지능의 안전성, 투명성, 그리고 인간과의 상호작용 방식에 대한 근본적인 질문에 답하고자 하는 이들의 깊은 고민에서 비롯된 것입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>인물 소개: 안드레이 카르파티(Andrej Karpathy)</title>
      <link>https://philipjkim.github.io/posts/20250803-introduction-to-andrej-karpathy/</link>
      <pubDate>Sun, 03 Aug 2025 21:04:27 +0900</pubDate>
      <guid>https://philipjkim.github.io/posts/20250803-introduction-to-andrej-karpathy/</guid>
      <description>&lt;h2 id=&#34;안드레이-카르파티는-누구인가&#34;&gt;안드레이 카르파티는 누구인가?&lt;/h2&gt;&#xA;&lt;p&gt;안드레이 카르파티는 10년 이상 딥러닝 혁명의 중심에 있었던 컴퓨터 과학자입니다. 그의 경력은 현대 AI 역사상 가장 중요한 세 기관인 스탠포드 대학교, 테슬라, 그리고 OpenAI에 걸쳐 있습니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;교육 및 초기 연구 (스탠포드 대학교):&lt;/strong&gt; 카르파티는 스탠포드 대학교에서 박사 학위를 받았으며, ImageNet 데이터셋의 창시자 중 한 명인 페이페이 리(Fei-Fei Li) 교수의 지도를 받았습니다. 그의 연구는 자연어 처리(NLP)와 컴퓨터 비전의 교차점에 초점을 맞췄습니다. 박사 과정 동안 그는 이미지의 내용을 자연어 문장으로 설명할 수 있는 획기적인 모델을 개발했습니다. 이미지 캡셔닝에 대한 이 연구는 기초가 되었으며, 복잡한 다중 모드 작업을 해결하기 위해 다양한 신경망 아키텍처(비전을 위한 합성곱 신경망과 언어를 위한 순환 신경망 등)를 결합하는 힘을 보여주었습니다. 그는 또한 스탠포드 최초의 딥러닝 강좌인 CS231n: &amp;ldquo;시각적 인식을 위한 합성곱 신경망&amp;quot;의 주 강사였으며, 이 강좌는 전 세계 학생들에게 중요한 자료가 되었습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go 는 왜 LLM 기반 Vibe-Coding에 적합한 언어인가?</title>
      <link>https://philipjkim.github.io/posts/20250731-golang-for-vibe-coding/</link>
      <pubDate>Thu, 31 Jul 2025 11:55:18 +0900</pubDate>
      <guid>https://philipjkim.github.io/posts/20250731-golang-for-vibe-coding/</guid>
      <description>&lt;p&gt;이 글에서는 LLM을 활용한 Vibe-Coding 시대에 Go 언어가 가지는 장점들을 알아봅니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;(영문 글을 번역했던 블로그 대부분의 포스트와는 달리 이 글은 제가 초안을 작성하고, Gemini 의 도움을 받아 개선된 originality 가 있는 글입니다.)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1-강력한-정적-타입-시스템과-컴파일-단계&#34;&gt;1. 강력한 정적 타입 시스템과 컴파일 단계&lt;/h2&gt;&#xA;&lt;p&gt;Go는 정적 타입 언어이며 컴파일을 통해 실행 파일을 만듭니다. 이는 코드가 실행되기 전, 즉 컴파일 시점에 타입 불일치, 함수 인자 오류, 존재하지 않는 변수 참조 등 수많은 오류를 미리 잡아낼 수 있음을 의미합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>번역글: Gemini CLI: 소개 및 그 진정한 가치</title>
      <link>https://philipjkim.github.io/posts/20250730-gemini-cli-an-introduction-and-its-real-value/</link>
      <pubDate>Wed, 30 Jul 2025 09:08:43 +0900</pubDate>
      <guid>https://philipjkim.github.io/posts/20250730-gemini-cli-an-introduction-and-its-real-value/</guid>
      <description>&lt;p&gt;&lt;em&gt;원문: &lt;a href=&#34;https://medium.com/@terrycho/gemini-cli-an-introduction-and-its-real-value-15bd070fb011&#34;&gt;https://medium.com/@terrycho/gemini-cli-an-introduction-and-its-real-value-15bd070fb011&lt;/a&gt; (translated by Google Gemini)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;얼마 전, Gemini CLI 발표 직후 구글의 Gemini 서버가 과부하되었다는 소식이 들려왔습니다. 사람들은 왜 Gemini CLI에 그렇게 열광하는 걸까요? 우리는 이미 웹과 데스크톱에서 사용할 수 있는 ChatGPT와 Claude, 그리고 Cursor와 Windsurf 같은 코딩 AI 도구, 심지어 Lovable과 V0 같은 바이브 코딩 도구까지 가지고 있습니다. 터미널 기반의 새로운 CLI 기반 AI가 이 시장에 어떤 영향을 미칠 수 있을까요?&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://miro.medium.com/v2/resize:fit:1400/format:webp/1*mnQoAMyjje5FOHG5TT85qA.png&#34; alt=&#34;img1&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;무료 서비스 발표가 상당한 인기를 얻었지만, Gemini CLI는 전체 소프트웨어 개발 수명 주기(SDLC)를 아우르는 오케스트레이터로서 새로운 입지를 확립했습니다. 이는 소프트웨어 개발 전체를 포괄하려는 야심 찬 계획을 엿볼 수 있게 합니다. 이 글에서는 Gemini CLI가 왜 그렇게 인기 있는지, 그 특징과 차별점, 숨겨진 가치, 그리고 미래 개발 가능성에 대해 논의할 것입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>번역글: 2025년 AI 프롬프트 엔지니어링: 무엇이 효과적이고 무엇이 그렇지 않은가</title>
      <link>https://philipjkim.github.io/posts/20250625-ai-prompt-engineering-in-2025/</link>
      <pubDate>Wed, 25 Jun 2025 20:03:14 +0900</pubDate>
      <guid>https://philipjkim.github.io/posts/20250625-ai-prompt-engineering-in-2025/</guid>
      <description>&lt;p&gt;&lt;em&gt;원문: &lt;a href=&#34;https://www.lennysnewsletter.com/p/ai-prompt-engineering-in-2025-sander-schulhoff&#34;&gt;https://www.lennysnewsletter.com/p/ai-prompt-engineering-in-2025-sander-schulhoff&lt;/a&gt; (translated by Google Gemini)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/eKuFqQKYRrA?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;h2 id=&#34;이-에피소드에서-배우게-될-내용&#34;&gt;이 에피소드에서 배우게 될 내용&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;가장 효과적인 5가지 프롬프트 엔지니어링 기법&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;역할 프롬프트(role prompting)&amp;rdquo; 및 AI 위협이 더 이상 작동하지 않는 이유 및 대신해야 할 일&lt;/li&gt;&#xA;&lt;li&gt;두 가지 유형의 프롬프트 엔지니어링: 대화형 및 제품/시스템 프롬프트&lt;/li&gt;&#xA;&lt;li&gt;프롬프트 인젝션 및 AI 레드 팀에 대한 입문서 - 여전히 최고 모델을 속이는 실제 탈옥(jailbreak) 전술 포함&lt;/li&gt;&#xA;&lt;li&gt;AI 에이전트와 로봇이 다음 주요 보안 위협이 될 이유&lt;/li&gt;&#xA;&lt;li&gt;AI 레드 팀 및 프롬프트 엔지니어링을 시작하는 방법&lt;/li&gt;&#xA;&lt;li&gt;AI 제품에 적용할 수 있는 실용적인 방어책&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;몇-가지-핵심-내용&#34;&gt;몇 가지 핵심 내용&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;프롬프트 엔지니어링은 여전히 매우 활발하며 그 어느 때보다 중요합니다.&lt;/strong&gt; 오히려 기업들이 사용자 대면 기능 및 핵심 기능을 구동하기 위해 LLM에 의존함에 따라 더욱 중요해졌습니다. Sander는 프롬프트 품질이 AI 성능을 좌우할 수 있는 방법, 특히 제품 전반에 걸쳐 확장될 때의 중요성을 설명합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;프롬프트 엔지니어링에는 &amp;ldquo;대화형&amp;quot;과 &amp;ldquo;제품 중심형&amp;quot;이라는 두 가지 명확한 유형이 있습니다.&lt;/strong&gt; 대부분의 사람들은 프롬프팅을 ChatGPT와 채팅하는 것으로 생각하지만, Sander는 진정한 영향력은 제품 내에서 고성능 프롬프트를 만드는 것에서 온다고 설명합니다. 이러한 프롬프트는 대규모로 사용되고, 수백만 번 실행되며, 프로덕션 코드처럼 강화되고 최적화되어야 합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&amp;ldquo;Few-shot 프롬프팅&amp;quot;은 정확도를 0%에서 90%로 향상시킬 수 있습니다.&lt;/strong&gt; 가장 강력한 기술 중 하나는 모델에 정확히 원하는 것의 예시를 보여주는 것입니다. 이를 few-shot 프롬프팅이라고 합니다. Sander는 이 단일 기술이 몇 가지 예시-레이블 쌍을 추가하는 것만으로 의료 코딩 사용 사례를 완전한 실패에서 거의 완벽한 결과로 바꾸어 놓았음을 공유합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할 프롬프트(예: &amp;ldquo;당신은 수학 교수입니다&amp;hellip;&amp;quot;)는 대부분의 사람들이 생각하는 것과 달리 대체로 비효율적입니다.&lt;/strong&gt; Sander는 역할 프롬프트가 어조나 글쓰기 스타일에는 도움이 될 수 있지만, 정확도를 높이는 데는 거의 효과가 없음을 보여주는 연구를 분석합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;분해(decomposition) 및 자기 비판(self-criticism)과 같은 고급 기술은 더 나은 성능을 끌어냅니다.&lt;/strong&gt; Sander는 모델에 먼저 문제를 하위 문제로 분해하거나(분해) 자신의 답변을 비판하도록 요청하는 것이 어떻게 더 똑똑하고 정확한 결과로 이어질 수 있는지 설명합니다. 이는 다단계 추론이 필요한 에이전트와 같은 설정에서 특히 가치가 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;컨텍스트(&amp;ldquo;추가 정보&amp;rdquo;)는 과소평가되어 있지만 엄청난 영향을 미칩니다.&lt;/strong&gt; 모델에 더 관련성 있는 배경 정보를 제공하는 것만으로도 성능을 크게 향상시킬 수 있습니다. Sander는 특히 올바른 형식과 순서로 포함되었을 때 추가 데이터(예: 이력, 연구 논문 또는 과거 상호 작용)를 포함하는 것이 프롬프트의 성공 여부를 결정했던 사례를 공유합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;프롬프트 인젝션은 실제적이고 위험하며 전통적인 의미에서는 해결 불가능합니다.&lt;/strong&gt; 우리는 공격자들이 어떻게 LLM을 &amp;ldquo;탈옥&amp;quot;시켜 유해하거나 제한되거나 의도치 않은 응답을 출력하도록 속이는지 살펴봅니다. 이러한 공격은 종종 &amp;ldquo;X를 하지 마시오&amp;quot;와 같은 전통적인 방어 수단을 우회합니다. 그리고 Sander (심지어 Sam Altman)에 따르면 만능 해결책은 없습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Sander는 세계 최대 규모의 AI 레드 팀 대회인 HackAPrompt를 운영합니다.&lt;/strong&gt; 60만 개 이상의 프롬프트가 수집되었고 OpenAI 및 Anthropic와의 지속적인 협력을 통해 Sander의 플랫폼은 실제 LLM 스트레스 테스트의 중심에 있습니다. 이는 크라우드소싱 보안과 게임 메커니즘의 독특한 조합이며, 연구소들이 AI 안전에 대해 생각하는 방식을 형성하고 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;에이전트 기반 AI 시스템은 챗봇보다 공격에 훨씬 더 취약합니다.&lt;/strong&gt; 오늘날의 프롬프트 인젝션에 대한 우려는 시작에 불과합니다. AI 에이전트가 항공편을 예약하고, 이메일을 보내고, 심지어 인간형으로 돌아다니기 시작하면 위험은 배가됩니다. Sander는 에이전트 보안이 다음 개척지인 이유와 대부분의 팀이 준비되지 않은 이유를 공유합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&amp;ldquo;할머니&amp;rdquo; 트릭, 오타, 난독화는 여전히 최첨단 모델을 무너뜨립니다.&lt;/strong&gt; 가장 발전된 LLM조차도 놀랍도록 간단한 해킹에 속을 수 있습니다. Sander는 감정 조작(예: &amp;ldquo;할머니가 해주던 것처럼 말해줘&amp;rdquo;), 인코딩된 입력, 창의적인 문구를 포함하여 여전히 작동하는 탈옥 기술을 설명합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;대부분의 회사는 손상된 방어책을 사용하고 있습니다.&lt;/strong&gt; Sander는 &amp;ldquo;프롬프트 분리&amp;quot;나 &amp;ldquo;악의적인 입력 무시&amp;quot;와 같은 문구를 추가하는 것이 왜 작동하지 않는지 분석합니다. 가드레일은 쉽게 우회되며, 현재 분류기는 인코딩된 공격을 잡아낼 지능이 부족한 경우가 많습니다. 보안의 미래는 모델 수준이어야 하며, 덧붙이는 방식이 아니어야 합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;위험에도 불구하고 AI의 잠재력은 엄청나며 추구할 가치가 있습니다.&lt;/strong&gt; Sander는 보안을 중요하게 생각하지만, 종말론자는 아닙니다. 그는 우리가 책임감 있게 구축한다면 AI가 생명을 구하고(특히 의료 분야에서), 생산성을 높이며, 실제 문제를 해결할 것이라고 믿습니다. 발전을 멈추는 것이 답이 아니라, 더 스마트하고 안전한 개발이 답입니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;strong&gt;Sander Schulhoff&lt;/strong&gt;는 원조 프롬프트 엔지니어입니다. 그는 인터넷 최초의 프롬프트 엔지니어링 가이드를 만들었고(ChatGPT 출시 두 달 전), 최근에는 OpenAI, Microsoft, Google, Princeton, Stanford와 공동 저술하여 1,500개 이상의 학술 논문을 분석하고 200개 이상의 프롬프트 기법을 다룬 프롬프트 엔지니어링에 대한 가장 포괄적인 연구를 수행했습니다. 또한 그는 OpenAI와 협력하여 최초이자 최대 규모의 AI 레드 팀 대회인 HackAPrompt를 운영하고 있으며, 이는 가장 최첨단 프롬프트 인젝션 기법(즉, LLM이 하지 말아야 할 일을 하도록 만드는 방법)을 발견하는 데 도움을 줍니다. Sander는 Maven에서 AI 레드 팀을 가르치고, AI 회사에 보안 자문을 제공하며, 수백만 명에게 가장 최첨단 프롬프트 엔지니어링 기법을 교육했습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>번역글: AI를 이용한 게임 디컴파일 개발 여정</title>
      <link>https://philipjkim.github.io/posts/20250625-development-journey-on-game-decompilation-using-ai/</link>
      <pubDate>Wed, 25 Jun 2025 14:35:23 +0900</pubDate>
      <guid>https://philipjkim.github.io/posts/20250625-development-journey-on-game-decompilation-using-ai/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://macabeus.medium.com/game-decompilation-using-ai-4d47b65f8852&#34;&gt;https://macabeus.medium.com/game-decompilation-using-ai-4d47b65f8852&lt;/a&gt; (Translated by Google Gemini)&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;안녕하세요, 저는 &lt;a href=&#34;https://github.com/macabeus&#34;&gt;Macabeus&lt;/a&gt;입니다. 이 글에서는 제가 오래된 게임을 디컴파일하기 위해 AI를 사용한 개발 여정을 공유하고, 이 재미있는 분야에서의 개인적인 연구를 탐색해 보려고 합니다!&lt;/p&gt;&#xA;&lt;h2 id=&#34;게임-디컴파일이란&#34;&gt;게임 디컴파일이란?&lt;/h2&gt;&#xA;&lt;p&gt;간단히 말해, &lt;em&gt;디컴파일&lt;/em&gt;은 저수준 코드를 고수준 코드로 변환하는 과정입니다. 예를 들어, 어셈블리에서 C로 변환하는 것입니다.&lt;/p&gt;&#xA;&lt;p&gt;IDA Pro나 Ghidra와 같은 유명한 리버스 엔지니어링 도구들을 통해 이를 알고 계실 수도 있습니다. 하지만 이 글에서 제가 &lt;em&gt;디컴파일&lt;/em&gt;이라고 언급할 때는, &lt;em&gt;일치하는 디컴파일(matching decompilation)&lt;/em&gt; 에 대해 이야기하는 것입니다. 이 더 구체적인 용어는 컴파일했을 때 대상 어셈블리와 &lt;strong&gt;정확히&lt;/strong&gt; 일치하면서도, 인간이 읽을 수 있는(human-readable) 고수준 코드를 작성하고자 함을 의미합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>번역글: 지금 바로 사용할 수 있는 최고의 AI 코딩 도구</title>
      <link>https://philipjkim.github.io/posts/20250624-the-best-ai-coding-tools-you-can-use-right-now/</link>
      <pubDate>Tue, 24 Jun 2025 19:52:16 +0900</pubDate>
      <guid>https://philipjkim.github.io/posts/20250624-the-best-ai-coding-tools-you-can-use-right-now/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://spectrum.ieee.org/best-ai-coding-tools&#34;&gt;https://spectrum.ieee.org/best-ai-coding-tools&lt;/a&gt; (Translated by Google Gemini)&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;AI 기반 &lt;a href=&#34;https://spectrum.ieee.org/tag/software-development&#34;&gt;소프트웨어 개발&lt;/a&gt; 도구는 빠르게 발전하고 있습니다. 향상된 &lt;a href=&#34;https://spectrum.ieee.org/tag/autocomplete&#34;&gt;자동 완성&lt;/a&gt;으로 시작했던 것이 애플리케이션을 작성하고, 문제를 디버깅하고, 전체 코드베이스를 관리할 수 있는(또는 적어도 시도할 수 있는) &lt;a href=&#34;https://spectrum.ieee.org/tag/ai-agents&#34;&gt;AI 에이전트&lt;/a&gt;로 확장되었습니다.&lt;/p&gt;&#xA;&lt;p&gt;소프트웨어 개발 회사 Frescher Southern LTD의 설립자이자 수석 엔지니어인 &lt;a href=&#34;https://www.linkedin.com/in/chasing/&#34;&gt;Josh Knowles&lt;/a&gt;는 “이것은 놀라울 정도로 빨랐습니다. 우리는 지금 위상 변화와 같은 것을 겪고 있습니다.”라고 말합니다.&lt;/p&gt;&#xA;&lt;p&gt;이러한 변화는 이 새로운 분야의 왕이 되기 위해 경쟁하는 AI 기반 코딩 도구들을 낳았습니다. 선도적인 도구 중 일부는 불과 몇 년 전에는 존재하지도 않던 &lt;a href=&#34;https://spectrum.ieee.org/tag/startups&#34;&gt;스타트업&lt;/a&gt;에서 나왔습니다. 그러나 거대 기술 기업들도 가만히 있지 않습니다. 다른 최고의 옵션들은 &lt;a href=&#34;https://spectrum.ieee.org/tag/microsoft&#34;&gt;Microsoft&lt;/a&gt;와 같은 기존 플레이어와 &lt;a href=&#34;https://spectrum.ieee.org/tag/anthropic&#34;&gt;Anthropic&lt;/a&gt;과 같은 자금력 있는 AI 연구소에서 제공됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>번역글: 현재 나의 LLM 코드 생성 워크플로우</title>
      <link>https://philipjkim.github.io/posts/20250623-my-llm-codegen-workflow-atm/</link>
      <pubDate>Mon, 23 Jun 2025 17:33:07 +0900</pubDate>
      <guid>https://philipjkim.github.io/posts/20250623-my-llm-codegen-workflow-atm/</guid>
      <description>&lt;p&gt;&lt;em&gt;원문: &lt;a href=&#34;https://harper.blog/2025/02/16/my-llm-codegen-workflow-atm/&#34;&gt;https://harper.blog/2025/02/16/my-llm-codegen-workflow-atm/&lt;/a&gt; (translated by Google Gemini)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;strong&gt;요약:&lt;/strong&gt; 스펙을 브레인스토밍하고, 계획을 계획한 다음, LLM 코드 생성을 사용하여 실행합니다. 개별적인 루프. 그리고 마법&lt;/p&gt;&#xA;&lt;p&gt;저는 LLM을 사용하여 아주 많은 소규모 제품을 만들어 왔습니다. 재미있고 유용했지만, 엄청난 시간을 낭비할 수 있는 함정들이 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;얼마 전 한 친구가 제가 LLM을 어떻게 사용하여 소프트웨어를 작성하는지 물었습니다. 저는 &amp;ldquo;이런. 시간이 얼마나 있으신데요!&amp;ldquo;라고 생각했고, 그래서 이 글을 쓰게 되었습니다.&lt;/p&gt;&#xA;&lt;p&gt;(추신: AI를 싫어하는 분이라면 맨 끝으로 스크롤하세요)&lt;/p&gt;&#xA;&lt;p&gt;저는 많은 개발자 친구들과 이 주제에 대해 이야기하는데, 우리 모두는 어느 방향으로든 약간의 변형을 가미한 비슷한 접근 방식을 가지고 있습니다. 여기 저의 워크플로우가 있습니다. 이것은 저 자신의 작업, 친구들과의 대화(Nikete, Kanno, Obra, Kris, Erik 고마워요), 그리고 여러 끔찍한 인터넷 나쁜 곳들에서 공유된 많은 모범 사례들을 바탕으로 만들어졌습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>번역글: 에단 몰릭이 말하는 AI와의 &#34;공동 지능&#34;을 위한 4가지 규칙</title>
      <link>https://philipjkim.github.io/posts/20250623-the-four-rules-of-co-intelligence-with-ai/</link>
      <pubDate>Mon, 23 Jun 2025 13:09:41 +0900</pubDate>
      <guid>https://philipjkim.github.io/posts/20250623-the-four-rules-of-co-intelligence-with-ai/</guid>
      <description>&lt;p&gt;&lt;em&gt;원문: &lt;a href=&#34;https://www.forbes.com/sites/peterhigh/2024/05/07/ethan-mollick-on-the-four-rules-of-co-intelligence-with-ai/&#34;&gt;https://www.forbes.com/sites/peterhigh/2024/05/07/ethan-mollick-on-the-four-rules-of-co-intelligence-with-ai/&lt;/a&gt; (translated by Google Gemini)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;에단 몰릭은 펜실베이니아 대학교 와튼 스쿨의 부교수로, 기업가 정신에서의 혁신을 연구하고 가르치며 인공지능이 업무와 교육에 미치는 영향을 분석합니다. 연구와 강의 외에도, 에단은 게임, 시뮬레이션, AI를 사용하여 교육을 민주화하려는 와튼 인터랙티브(Wharton Interactive)를 이끌고 있습니다. 학계에 몸담기 전에는 스타트업을 공동 창업했으며, 현재는 기업가와 다른 경영진들의 자문 역할을 하고 있습니다. 에단의 최신 저서로는 &amp;lsquo;공동 지능: AI와 함께 생활하고 일하기(Co-Intelligence: Living and Working with AI)&amp;lsquo;가 있습니다. 또한 그는 13만 4천 명 이상의 팔로워를 보유한 인기 블로그 &amp;lsquo;OneUsefulThing&amp;rsquo;의 저자이기도 합니다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
