<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>philipjkim</title>
    <link>https://philipjkim.github.io/</link>
    <description>Recent content on philipjkim</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 23 Jun 2025 13:09:41 +0900</lastBuildDate>
    <atom:link href="https://philipjkim.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>에단 몰릭이 말하는 AI와의 &#34;공동 지능&#34;을 위한 4가지 규칙</title>
      <link>https://philipjkim.github.io/posts/20250623-the-four-rules-of-co-intelligence-with-ai/</link>
      <pubDate>Mon, 23 Jun 2025 13:09:41 +0900</pubDate>
      <guid>https://philipjkim.github.io/posts/20250623-the-four-rules-of-co-intelligence-with-ai/</guid>
      <description>&lt;p&gt;&lt;em&gt;Translated by Google Gemini&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;에단 몰릭은 펜실베이니아 대학교 와튼 스쿨의 부교수로, 기업가 정신에서의 혁신을 연구하고 가르치며 인공지능이 업무와 교육에 미치는 영향을 분석합니다. 연구와 강의 외에도, 에단은 게임, 시뮬레이션, AI를 사용하여 교육을 민주화하려는 와튼 인터랙티브(Wharton Interactive)를 이끌고 있습니다. 학계에 몸담기 전에는 스타트업을 공동 창업했으며, 현재는 기업가와 다른 경영진들의 자문 역할을 하고 있습니다. 에단의 최신 저서로는 &amp;lsquo;공동 지능: AI와 함께 생활하고 일하기(Co-Intelligence: Living and Working with AI)&amp;lsquo;가 있습니다. 또한 그는 13만 4천 명 이상의 팔로워를 보유한 인기 블로그 &amp;lsquo;OneUsefulThing&amp;rsquo;의 저자이기도 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://philipjkim.github.io/dev/hoola-calculator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://philipjkim.github.io/dev/hoola-calculator/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xA;&lt;html lang=&#34;ko&#34;&gt;&#xA;&lt;head&gt;&#xA;    &lt;meta charset=&#34;UTF-8&#34;&gt;&#xA;    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;&#xA;    &lt;title&gt;훌라 카드 합계 계산기&lt;/title&gt;&#xA;        &lt;style&gt;&#xA;        body {&#xA;            font-family: sans-serif;&#xA;            display: flex;&#xA;            flex-direction: column;&#xA;            align-items: center;&#xA;            padding: 20px;&#xA;        }&#xA;        h1 {&#xA;            margin-bottom: 20px;&#xA;            font-size: 24px;&#xA;        }&#xA;        .card-buttons {&#xA;            /* 수정된 부분: 3개씩 한 줄에 표시되도록 설정 */&#xA;            display: grid;&#xA;            grid-template-columns: repeat(3, 1fr); /* 항상 3개의 열 */&#xA;            gap: 10px;&#xA;            margin-bottom: 20px;&#xA;            width: 100%; /* 부모 너비에 맞춤 */&#xA;            max-width: 600px; /* 최대 너비 유지 */&#xA;            box-sizing: border-box; /* 패딩과 보더가 너비에 포함되도록 */&#xA;            padding: 0 10px; /* 좌우 잘림 방지를 위해 약간의 패딩 추가 */&#xA;        }&#xA;        .card-button {&#xA;            padding: 15px;&#xA;            border: 1px solid #ccc;&#xA;            border-radius: 8px;&#xA;            /* background-color: #f0f0f0; */&#xA;            text-align: center;&#xA;            cursor: pointer;&#xA;            font-size: 18px;&#xA;            box-sizing: border-box;&#xA;            /* 최소 너비 제한을 없애고 1fr로만 관리하여 유연하게 */&#xA;            min-width: 0; /* flex/grid 아이템의 기본 min-width를 재정의 */&#xA;        }&#xA;        .card-button.selected {&#xA;            background-color: #ddd;&#xA;        }&#xA;        .selected-cards {&#xA;            margin-bottom: 15px;&#xA;            font-size: 16px;&#xA;        }&#xA;        .result {&#xA;            font-weight: bold;&#xA;            font-size: 20px;&#xA;            margin-bottom: 20px;&#xA;        }&#xA;        button {&#xA;            padding: 12px 25px;&#xA;            border: none;&#xA;            border-radius: 8px;&#xA;            background-color: #444444;&#xA;            /* color: white; */&#xA;            cursor: pointer;&#xA;            font-size: 18px;&#xA;        }&#xA;        button:hover {&#xA;            /* background-color: #0056b3; */&#xA;        }&#xA;        /* 추가: 화면이 매우 좁을 경우를 위한 미디어 쿼리 (필요시) */&#xA;        @media (max-width: 380px) { /* 더 좁은 화면 (예: 아이폰 SE1) */&#xA;            .card-buttons {&#xA;                gap: 5px; /* 버튼 간격 줄이기 */&#xA;                padding: 0 5px; /* 패딩도 줄이기 */&#xA;            }&#xA;            .card-button {&#xA;                font-size: 16px; /* 폰트 사이즈 줄이기 */&#xA;                padding: 10px; /* 패딩 줄이기 */&#xA;            }&#xA;        }&#xA;    &lt;/style&gt;&#xA;&lt;/head&gt;&#xA;&lt;body&gt;&#xA;    &lt;h1&gt;훌라 카드 합계 계산기&lt;/h1&gt;&#xA;    &lt;div class=&#34;card-buttons&#34;&gt;&#xA;        &lt;button class=&#34;card-button&#34; data-value=&#34;1&#34; data-alt-value=&#34;14&#34;&gt;A&lt;/button&gt;&#xA;        &lt;button class=&#34;card-button&#34; data-value=&#34;2&#34;&gt;2&lt;/button&gt;&#xA;        &lt;button class=&#34;card-button&#34; data-value=&#34;3&#34;&gt;3&lt;/button&gt;&#xA;        &lt;button class=&#34;card-button&#34; data-value=&#34;4&#34;&gt;4&lt;/button&gt;&#xA;        &lt;button class=&#34;card-button&#34; data-value=&#34;5&#34;&gt;5&lt;/button&gt;&#xA;        &lt;button class=&#34;card-button&#34; data-value=&#34;6&#34;&gt;6&lt;/button&gt;&#xA;        &lt;button class=&#34;card-button&#34; data-value=&#34;7&#34;&gt;7&lt;/button&gt;&#xA;        &lt;button class=&#34;card-button&#34; data-value=&#34;8&#34;&gt;8&lt;/button&gt;&#xA;        &lt;button class=&#34;card-button&#34; data-value=&#34;9&#34;&gt;9&lt;/button&gt;&#xA;        &lt;button class=&#34;card-button&#34; data-value=&#34;10&#34;&gt;10&lt;/button&gt;&#xA;        &lt;button class=&#34;card-button&#34; data-value=&#34;11&#34;&gt;J&lt;/button&gt;&#xA;        &lt;button class=&#34;card-button&#34; data-value=&#34;12&#34;&gt;Q&lt;/button&gt;&#xA;        &lt;button class=&#34;card-button&#34; data-value=&#34;13&#34;&gt;K&lt;/button&gt;&#xA;    &lt;/div&gt;&#xA;    &lt;div class=&#34;selected-cards&#34;&gt;선택한 카드: &lt;/div&gt;&#xA;    &lt;div class=&#34;result&#34;&gt;총합: &lt;/div&gt;&#xA;    &lt;button id=&#34;reset-button&#34;&gt;초기화&lt;/button&gt;&#xA;&#xA;    &lt;script&gt;&#xA;        const cardButtons = document.querySelectorAll(&#39;.card-button&#39;);&#xA;        const selectedCardsDiv = document.querySelector(&#39;.selected-cards&#39;);&#xA;        const resultDiv = document.querySelector(&#39;.result&#39;);&#xA;        const resetButton = document.getElementById(&#39;reset-button&#39;);&#xA;        let selectedCards = [];&#xA;&#xA;        cardButtons.forEach(button =&gt; {&#xA;            button.addEventListener(&#39;click&#39;, function() {&#xA;                const value = parseInt(this.dataset.value);&#xA;                const altValue = this.dataset.altValue ? parseInt(this.dataset.altValue) : null;&#xA;                selectedCards.push({ value: value, altValue: altValue, display: this.textContent });&#xA;                this.classList.add(&#39;selected&#39;);&#xA;                updateDisplay();&#xA;                calculateSum();&#xA;            });&#xA;        });&#xA;&#xA;        resetButton.addEventListener(&#39;click&#39;, function() {&#xA;            selectedCards = [];&#xA;            cardButtons.forEach(button =&gt; button.classList.remove(&#39;selected&#39;));&#xA;            updateDisplay();&#xA;            calculateSum();&#xA;        });&#xA;&#xA;        function updateDisplay() {&#xA;            selectedCardsDiv.textContent = &#39;선택한 카드: &#39; + selectedCards.map(card =&gt; card.display).join(&#39;, &#39;);&#xA;        }&#xA;&#xA;        function calculateSum() {&#xA;            if (selectedCards.length === 0) {&#xA;                resultDiv.textContent = &#39;총합: &#39;;&#xA;                return;&#xA;            }&#xA;&#xA;            const hasAce = selectedCards.some(card =&gt; card.display === &#39;A&#39;);&#xA;&#xA;            if (hasAce) {&#xA;                let sumWithAas1 = 0;&#xA;                let sumWithAas14 = 0;&#xA;                selectedCards.forEach(card =&gt; {&#xA;                    sumWithAas1 += (card.display === &#39;A&#39; ? 1 : card.value);&#xA;                    sumWithAas14 += (card.display === &#39;A&#39; ? 14 : card.value);&#xA;                });&#xA;                resultDiv.textContent = &#39;총합: &#39; + sumWithAas1 + &#39; / &#39; + sumWithAas14;&#xA;            } else {&#xA;                const totalSum = selectedCards.reduce((sum, card) =&gt; sum + card.value, 0);&#xA;                resultDiv.textContent = &#39;총합: &#39; + totalSum;&#xA;            }&#xA;        }&#xA;    &lt;/script&gt;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://philipjkim.github.io/dev/polymer-image-slider/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://philipjkim.github.io/dev/polymer-image-slider/</guid>
      <description>&lt;!doctype html&gt;&#xA;&lt;html&gt;&#xA;&lt;head&gt;&#xA;  &lt;title&gt;polymer-image-slider demo&lt;/title&gt;&#xA;&#xA;  &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, minimum-scale=1.0, initial-scale=1, user-scalable=yes&#34;&gt;&#xA;  &lt;meta name=&#34;mobile-web-app-capable&#34; content=&#34;yes&#34;&gt;&#xA;  &lt;meta name=&#34;apple-mobile-web-app-capable&#34; content=&#34;yes&#34;&gt;&#xA;&#xA;  &lt;script src=&#34;bower_components/webcomponentsjs/webcomponents-lite.js&#34;&gt;&lt;/script&gt;&#xA;  &lt;link rel=&#34;shortcut icon&#34; href=&#34;./favicon.ico&#34;&gt;&#xA;  &lt;link rel=&#34;import&#34; href=&#34;bower_components/polymer/polymer.html&#34;&gt;&#xA;  &lt;link rel=&#34;import&#34; href=&#34;bower_components/iron-demo-helpers/demo-snippet.html&#34;&gt;&#xA;  &lt;link rel=&#34;import&#34; href=&#34;bower_components/iron-demo-helpers/demo-pages-shared-styles.html&#34;&gt;&#xA;  &lt;link rel=&#34;import&#34; href=&#34;bower_components/paper-styles/color.html&#34;&gt;&#xA;  &lt;link rel=&#34;import&#34; href=&#34;bower_components/polymer-image-slider/polymer-image-slider.html&#34;&gt;&#xA;  &lt;style is=&#34;custom-style&#34; include=&#34;demo-pages-shared-styles&#34;&gt;&#xA;    .centered:not([style-scope]):not(.style-scope) {&#xA;      max-width: 100%;&#xA;    }&#xA;  &lt;/style&gt;&#xA;&lt;/head&gt;&#xA;&lt;body unresolved&gt;&#xA;&lt;div class=&#34;vertical-section-container centered&#34;&gt;&#xA;  &lt;h3&gt;paper-sliders have &lt;code&gt;images&lt;/code&gt; attribute,&#xA;    and dynamically change images by modifying the attribute value.&lt;/h3&gt;&#xA;  &lt;demo-snippet&gt;&#xA;    &lt;template&gt;&#xA;      &lt;!--&#xA;      max-width is adjustable via CSS variable `--image-slider-max-width`.&#xA;      --&gt;&#xA;      &lt;style is=&#34;custom-style&#34;&gt;&#xA;        #slider {&#xA;          --image-slider-max-width: 300px;&#xA;        }&#xA;      &lt;/style&gt;&#xA;&#xA;      &lt;!--&#xA;      Use single-quotes for `images` attribute - the value should be a valid JSON string.&#xA;&#xA;      &lt;image-slider id=&#34;slider&#34; images=&#39;[&#34;1.jpg&#34;,&#34;2.jpg&#34;]&#39;&gt;&lt;/image-slider&gt;&#xA;      --&gt;&#xA;      &lt;image-slider id=&#34;slider&#34; images=&#39;[&#34;1.jpg&#34;,&#34;2.jpg&#34;]&#39;&gt;&lt;/image-slider&gt;&#xA;&#xA;      &lt;!-- Manipulation using JS --&gt;&#xA;      &lt;button id=&#34;btn-change&#34; onclick=&#34;changeImages();&#34;&gt;Change images&lt;/button&gt;&#xA;      &lt;button id=&#34;btn-bullet&#34; onclick=&#34;toggleBullet();&#34;&gt;Show/hide bullets&lt;/button&gt;&#xA;&#xA;      &lt;script&gt;&#xA;        function changeImages() {&#xA;          var imageSet1 = [&#34;1.jpg&#34;,&#34;2.jpg&#34;];&#xA;          var imageSet2 = [&#34;3.jpg&#34;,&#34;4.jpg&#34;,&#34;5.jpg&#34;];&#xA;          var images = document.querySelector(&#39;#slider&#39;).images;&#xA;          if (images.length == 2) {&#xA;            document.querySelector(&#39;#slider&#39;).images = imageSet2;&#xA;          } else {&#xA;            document.querySelector(&#39;#slider&#39;).images = imageSet1;&#xA;          }&#xA;        }&#xA;&#xA;        function toggleBullet() {&#xA;          var noBullets = document.querySelector(&#39;#slider&#39;).noBullets;&#xA;          document.querySelector(&#39;#slider&#39;).noBullets = !noBullets;&#xA;        }&#xA;      &lt;/script&gt;&#xA;    &lt;/template&gt;&#xA;  &lt;/demo-snippet&gt;&#xA;&#xA;  &lt;h3&gt;If you want to show images in actual size,&#xA;    set &lt;code&gt;--image-slider-max-width&lt;/code&gt; to &lt;code&gt;none&lt;/code&gt;.&lt;/h3&gt;&#xA;  &lt;demo-snippet&gt;&#xA;    &lt;template&gt;&#xA;      &lt;style is=&#34;custom-style&#34;&gt;&#xA;        #slider2 {&#xA;          --image-slider-max-width: none;&#xA;        }&#xA;      &lt;/style&gt;&#xA;&#xA;      &lt;image-slider id=&#34;slider2&#34; images=&#39;[&#34;1.jpg&#34;,&#34;2.jpg&#34;]&#39;&gt;&lt;/image-slider&gt;&#xA;    &lt;/template&gt;&#xA;  &lt;/demo-snippet&gt;&#xA;&lt;/div&gt;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://philipjkim.github.io/dev/vue2-flip-countdown/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://philipjkim.github.io/dev/vue2-flip-countdown/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xA;&lt;html&gt;&#xA;  &lt;head&gt;&#xA;    &lt;meta charset=&#34;utf-8&#34; /&gt;&#xA;    &lt;meta http-equiv=&#34;X-UA-Compatible&#34; content=&#34;IE=edge&#34; /&gt;&#xA;    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width,initial-scale=1&#34; /&gt;&#xA;    &lt;link rel=&#34;icon&#34; href=&#34;./favicon.ico&#34; /&gt;&#xA;    &lt;title&gt;Demo: vue2-flip-countdown&lt;/title&gt;&#xA;    &lt;link href=&#34;./css/app.30f70602.css&#34; rel=&#34;preload&#34; as=&#34;style&#34; /&gt;&#xA;    &lt;link href=&#34;./js/app.4cf28f45.js&#34; rel=&#34;preload&#34; as=&#34;script&#34; /&gt;&#xA;    &lt;link href=&#34;./js/chunk-vendors.0e314190.js&#34; rel=&#34;preload&#34; as=&#34;script&#34; /&gt;&#xA;    &lt;link href=&#34;./css/app.30f70602.css&#34; rel=&#34;stylesheet&#34; /&gt;&#xA;  &lt;/head&gt;&#xA;  &lt;body&gt;&#xA;    &lt;noscript&#xA;      &gt;&lt;strong&#xA;        &gt;We&#39;re sorry but demo doesn&#39;t work properly without JavaScript enabled.&#xA;        Please enable it to continue.&lt;/strong&#xA;      &gt;&lt;/noscript&#xA;    &gt;&#xA;    &lt;div id=&#34;app&#34;&gt;&lt;/div&gt;&#xA;    &lt;script src=&#34;./js/chunk-vendors.0e314190.js&#34;&gt;&lt;/script&gt;&#xA;    &lt;script src=&#34;./js/app.4cf28f45.js&#34;&gt;&lt;/script&gt;&#xA;  &lt;/body&gt;&#xA;&lt;/html&gt;</description>
    </item>
  </channel>
</rss>
